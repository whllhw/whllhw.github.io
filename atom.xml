<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>仰头45℃爆笑</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://whllhw.xyz/"/>
  <updated>2018-09-10T05:05:59.999Z</updated>
  <id>https://whllhw.xyz/</id>
  
  <author>
    <name>Jax</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Visual Studio 2017 无法登陆提示脚本错误</title>
    <link href="https://whllhw.xyz/posts/2018/09/10/Visual%20Studio%202017%20%E6%97%A0%E6%B3%95%E7%99%BB%E9%99%86%E6%8F%90%E7%A4%BA%E8%84%9A%E6%9C%AC%E9%94%99%E8%AF%AF/"/>
    <id>https://whllhw.xyz/posts/2018/09/10/Visual Studio 2017 无法登陆提示脚本错误/</id>
    <published>2018-09-10T02:17:26.000Z</published>
    <updated>2018-09-10T05:05:59.999Z</updated>
    
    <content type="html"><![CDATA[<p>打开 VS 发现许可证过期，需要登陆后重新获取，但是登陆时提示：<a href="https://auth.gfx.ms/16.000.27887.2/OldConvergedLogin_PCore.js" target="_blank" rel="noopener">https://auth.gfx.ms/16.000.27887.2/OldConvergedLogin_PCore.js</a> Script error 无法执行脚本。<br>浏览器打开发现脚本没问题。重启多试几次，还是不行，就直接搜这个网址，还真有：<a href="https://www.cnblogs.com/xxyxxb2080/p/9520837.html" target="_blank" rel="noopener">VS2017登陆不了,TFS无法连接成功的问题</a><br>果然，我的 win7 是 ie8，不过都是用 chrome 上网的（巨硬都是用系统自带的东西，也是服了），马上更新<br><a href="https://www.microsoft.com/en-us/download/internet-explorer-11-for-windows-7-details.aspx" target="_blank" rel="noopener">ie 11 更新包</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/ie1.png" alt="下载运行提示缺少必要的更新，弹出网页，下载所有安装即可，再重启电脑安装ie 11" title="">                </div>                <div class="image-caption">下载运行提示缺少必要的更新，弹出网页，下载所有安装即可，再重启电脑安装ie 11</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/ie2.png" alt="安装 ie 11" title="">                </div>                <div class="image-caption">安装 ie 11</div>            </figure><p>更新完了之后，我发现 Office 也能登录了，可以愉快的用 OneNote 了。😄</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打开 VS 发现许可证过期，需要登陆后重新获取，但是登陆时提示：&lt;a href=&quot;https://auth.gfx.ms/16.000.27887.2/OldConvergedLogin_PCore.js&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ht
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>暑假有感</title>
    <link href="https://whllhw.xyz/posts/2018/09/03/%E6%9A%91%E5%81%87%E6%9C%89%E6%84%9F/"/>
    <id>https://whllhw.xyz/posts/2018/09/03/暑假有感/</id>
    <published>2018-09-02T16:03:06.000Z</published>
    <updated>2018-09-10T05:05:59.981Z</updated>
    
    <content type="html"><![CDATA[<p>以前回家总是没事情做，天天无所事事，每次放假回来都充满内疚感，什么都没有做，高三老师曾说，假期是超越别人的最好时期。那这样说来，我都不知道被超越了多少了。但是这个假期，可以说是有收获的。时间匆匆，近两个月的时间很快就结束了，时间总是过得很快，让人来不及记得发生过的事。这段时间，是很开心的，可以说是令人激动的。认识这么多优秀的同学，还有老司机学长。每次交流总能有新的笑点，分享经验，分享遇到各种的坑。我不善于交际、很少交流、表达困难，在外人眼前很少暴露自己狂热的内心想法。但是在这个团队里却觉得很舒适，不会觉得很压抑，也是很感谢各个同学和学长一起营造的友好氛围。</p><p>第一次见面时候，紧张，慌乱，害怕融入不了这个集体，过了一个暑假到现在却不舍离开。早上一过去，盯了一会屏幕，就该吃午饭了，然后又到了晚上了。很快一个暑假就过去了，仿佛就是昨天。（ok，扯不下去了。总之想表达的就是小确幸。下面就总结一下，遇到的问题和收获吧）</p><p>很多时候，我觉得我都做的不足，其实我是可以解决得更多的事情，可以分担一下队友的锅，或者是重构一些代码，而不是袖手旁观。学习积累不足，很多东西直接就用起来了。有时间还是要多读文档，了解相关知识，不然到时候用起来就容易 GG。</p><ul><li>顺便就加上 CDN ，对象存储等云服务。直接把静态页面放在了七牛上面，但是资源的刷新在更新代码后看不到效果，即便强制刷新也不能出来（在七牛上刷新也无效）。后面还是用 CDN 回源，把前端资源放在腾讯云服务器上。</li><li>在多人协作方面真是要多学习，比如代码合并问题，还有沟通上存在的问题，效率受影响。真实的项目要做好确实不容易，很多东西缺乏统一，缺乏规范，缺乏测试代码，导致后面问题很多。（只能慢慢修补了）</li><li>代码模块之间的耦合度还是比较高，有的地方直接用 repository ，有的地方调用 service</li><li>数据库的建模也需要一定的规划，统一字段名，数据类型，索引建立，唯一性约束，（外键还是有待商榷）</li><li>缺少 DBA ，测试人员，（现在都是人肉测试，出了问题就直接改）不过毕竟也是小型项目，大家都是边学边做，也没有有经验人员指导，只是在网上翻，在一些书里面翻，缺少实践，也就找不到最佳实践。<br>（其他的待更新）</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以前回家总是没事情做，天天无所事事，每次放假回来都充满内疚感，什么都没有做，高三老师曾说，假期是超越别人的最好时期。那这样说来，我都不知道被超越了多少了。但是这个假期，可以说是有收获的。时间匆匆，近两个月的时间很快就结束了，时间总是过得很快，让人来不及记得发生过的事。这段时
      
    
    </summary>
    
    
      <category term="java" scheme="https://whllhw.xyz/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>idea git push 引起的血案</title>
    <link href="https://whllhw.xyz/posts/2018/08/26/idea%20git%20push%20%E5%BC%95%E8%B5%B7%E7%9A%84%E8%A1%80%E6%A1%88/"/>
    <id>https://whllhw.xyz/posts/2018/08/26/idea git push 引起的血案/</id>
    <published>2018-08-26T14:21:58.000Z</published>
    <updated>2018-09-10T05:05:59.962Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>操作不当导致一天内写的代码丢失，最后依靠 idea 的本地历史（local history）找回。</p></blockquote><p>过程：</p><ol><li>使用 idea 的 VSC 工具进行 git commit （用这个主要是这个带有自动整理代码，优化导入的功能，还会分析代码）</li><li>想了想应该只有我有最新的版本了，别人不会有更新的。于是直接点开 git push （以前都是先使用 git pull 的，这次脑残了）</li><li>提示有冲突，是否进行合并，选择是，自动合并完毕后。编译代码失败。一看，我一天写的写的定时消息通知不见了。</li><li>我的妈啊，怎么直接没了，赶紧打开 bash 用 <code>git reflog</code> 结果如下：（有两处的 commit 信息是 add: 加入各处通知）</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/TIM截图20180828233327.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><ol start="4"><li><code>ee2fa85</code> 直接变成了 merge 节点，而且我的提交直接就没有了，恢复不了。<code>git reset --hard</code> 只能回到原来的版本，但是记录里面根本没有我提交的版本</li><li>救命稻草：idea 本地历史，idea 提供了磁盘上所有文件的修改记录，并且标注了时间，after push 、build 的操作就记录了下来，（这么吃内存也是有好处）于是我凭记忆恢复了我一天写的代码。</li><li>最后再提交、推送到远程库</li></ol><ul><li>从 gitea 上面的提交图来看，也说明了这次血案的原因</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/TIM截图20180828232021.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>由提交图可以看到，我提交了一个 merge 节点，用于自动合并与其他人的代码版本。这个节点应该是 git 自动生成的，提交信息里面应该有 merge branch 字样，但是这个提交直接用我的 commit 信息了。</p><hr><p>其实还有点疑惑的地方，有时间复现一下，看一看到底是怎么回事。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;操作不当导致一天内写的代码丢失，最后依靠 idea 的本地历史（local history）找回。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;过程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用 idea 的 VSC 工具进行 git commit （用这个主要
      
    
    </summary>
    
    
      <category term="git" scheme="https://whllhw.xyz/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>升级到 spring boot 2.0</title>
    <link href="https://whllhw.xyz/posts/2018/08/25/%E5%8D%87%E7%BA%A7%E5%88%B0%20spring%20boot%202.0/"/>
    <id>https://whllhw.xyz/posts/2018/08/25/升级到 spring boot 2.0/</id>
    <published>2018-08-24T16:48:07.000Z</published>
    <updated>2018-09-10T05:05:59.943Z</updated>
    
    <content type="html"><![CDATA[<p>spring boot 2.0 版本出了有一段时间了，当然是要用一用了，把现在在写的项目升级一波。当然升级前是看了一下别人的博客 <a href="http://tengj.top/2018/07/23/springboot2to1/" target="_blank" rel="noopener">http://tengj.top/2018/07/23/springboot2to1/</a> 。（怎么感觉有质量的博客越来越少，剩下的就是在互相“引用”，搜出来基本一模一样，国内某搜索引擎更加差劲，还是自己抽时间看文档比较好）本篇持续更新（随缘）</p><hr><ul><li>首先在 pom.xml 中修改 1.5.10 为 2.0.4 （项目要求稳定一点，也不能太激进。）</li><li>idea 下载依赖的时候，手动运行 mvn clean 等命令下载依赖，不然会出现 idea 依赖下完，还是不能构建，至今不知道为什么，是什么 bug</li></ul><p>2.0 中的更改：</p><ol><li>删除 repository 的 findOne ，导致以前使用的 findOne 不能使用，直接替换为 getOne 会出现以下问题：</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/images/gson.png" alt="getOne 返回代理类HibernateProxy，进行序列化时出错，提示添加适配器。" title="">                </div>                <div class="image-caption">getOne 返回代理类HibernateProxy，进行序列化时出错，提示添加适配器。</div>            </figure><p>简单解决：<br>用 findById 回避代理类，但是这个接口又被改成返回 <code>Optional&lt;S&gt;</code> 必须使用 get() 来获取 实体。Optional 要求内容非空，否则使用 get() 方法会抛出异常 NoSuchElementException ，优雅了解决空指针异常。</p><ol start="2"><li>new PageRequest 不推荐使用 @Depreacted ，直接更换为静态方法  PageRequest.of，点进去看是返回 new PageRequest 。（之前在 1.5 好像就是不推荐用 of 静态方法，现在又改回来了）</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;spring boot 2.0 版本出了有一段时间了，当然是要用一用了，把现在在写的项目升级一波。当然升级前是看了一下别人的博客 &lt;a href=&quot;http://tengj.top/2018/07/23/springboot2to1/&quot; target=&quot;_blank&quot; re
      
    
    </summary>
    
    
      <category term="spring boot" scheme="https://whllhw.xyz/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>重装系统后要做的事情</title>
    <link href="https://whllhw.xyz/posts/2018/08/06/%E9%87%8D%E8%A3%85%E7%B3%BB%E7%BB%9F%E5%90%8E%E8%A6%81%E5%81%9A%E7%9A%84%E4%BA%8B%E6%83%85/"/>
    <id>https://whllhw.xyz/posts/2018/08/06/重装系统后要做的事情/</id>
    <published>2018-08-06T01:39:41.000Z</published>
    <updated>2018-09-10T05:05:59.927Z</updated>
    
    <content type="html"><![CDATA[<ul><li>前一阵子参加信息院的安全竞赛，竟然获得了一个固态硬盘。马上装上 win10 体验一波。原来买电脑的时候就是装的 win10，后面各种卡顿（年少无知，非要去电脑城买），直接换成 win7。最近 win7爆出使用数量下降，肯定是电脑更新换代，都是预装 win10。ok，不多说了，进入主题。</li><li>进入 win10 后，要求登录 Microsoft 账号，BABALA填完后，进入等待桌面加载。动画效果确实好，比 win7 更加炫酷。但是开始菜单多了很多用不到的东西和用不了到的东西比如 OneNote、天气、新闻、联系人…所以第一步：卸载这些无用的东西。</li><li>由于我以前将用户数据和系统分离，为了少安装一些常用的软件，通常把用户文档、桌面移动到其他盘，在新系统上设置一下就恢复了快捷访问。</li><li>其他的不多说了，就是安装一些非绿色版，要修改注册表的软件，杀毒软件、 office 等等，调整系统设置<br>（ok，这是一个月之前的事情了，我很多都忘了。win10游戏时输入法无法打字，以及 windows defender 一直偷cpu，一气之下格式化C盘。下面才是我现在在用的重装过后的win7）</li><li><em>详细列一下开发要设置的东西，便于以后查阅</em>：</li></ul><ol><li>安装运行库。这些都没有自带，给差评。visual c   redistributable ，DirectX，.net framework 等等。推荐一个软件<a href="https://www.iplaysoft.com/aio-runtimes.html" target="_blank" rel="noopener">All in One Runtimes</a>可以直接安装以上的运行库。</li><li>可绿色运行的开发软件添加一下系统路径。如  python3 (python2出现并发数设置不对的错误，估计是配置文件放在了系统盘上)，jetbrain（导入以前的设置，还有登录账号激活），nodejs（包括.\node_modules\.bin）</li><li>listary 效率工具设置自启动（有了它桌面都可以不要，只要你知道要用什么软件，直接键入名称即可启动），bandizip 添加文件关联，sublime vscode notepad</li><li>重新安装一下git，虽然可以是绿色版本，但是使用系统自带的cmd真的好丑。使用 git-bash 就好一点了</li><li>复制一下服务器私钥到用户主目录下，这样 ssh 就不用输密码了。</li><li>安装 chrome，有时候 google 打不开，只能去各软件广告商下载。再手动导入科学插件，最后登录账号，基本就结束了。<br>现在做的事情基本就这么多，过几天有新东西再更新。</li></ol><hr><p>更新：</p><ol><li>安装 Office 2016 使用 <a href="https://github.com/officetoolplus/OTool" target="_blank" rel="noopener">https://github.com/officetoolplus/OTool</a> 服务器上安装 docker 版本的 vlmcsd 授权激活，但是在 office 上无法登陆账号，朋友的 Office 2019 可以用。一直没找到原因。</li><li>finallshell 可以加速海外服务器的访问，看了一下 last 命令，是有两个账号同时登陆，查 ip 是阿里云香港，进行了转发，效果好了很多。</li><li>MobaXterm 分屏同时多个终端输入，管理服务器真的不要太爽，比 putty 好用多了。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;前一阵子参加信息院的安全竞赛，竟然获得了一个固态硬盘。马上装上 win10 体验一波。原来买电脑的时候就是装的 win10，后面各种卡顿（年少无知，非要去电脑城买），直接换成 win7。最近 win7爆出使用数量下降，肯定是电脑更新换代，都是预装 win10。o
      
    
    </summary>
    
    
      <category term="电脑" scheme="https://whllhw.xyz/tags/%E7%94%B5%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>Spring boot 笔记</title>
    <link href="https://whllhw.xyz/posts/2018/03/21/Spring%20boot%20%E7%AC%94%E8%AE%B0/"/>
    <id>https://whllhw.xyz/posts/2018/03/21/Spring boot 笔记/</id>
    <published>2018-03-21T14:19:59.000Z</published>
    <updated>2018-09-10T05:05:59.907Z</updated>
    
    <content type="html"><![CDATA[<h2 id="jpa">JPA</h2><ul><li><p>中文乱码</p><ol><li>检查数据库编码<ul><li><code>show variables like 'character_set_database';</code>–查看该数据库使用的编码</li><li><code>alter database &lt;数据库名&gt; CHARACTER SET utf8;</code>–修改编码为utf8</li><li><code>show create table &lt;表名&gt;;</code>–查询表的编码，默认为：latin1</li><li><code>alter table &lt;表名&gt; character set utf8;</code>–修改表的编码</li></ul></li><li>检查JPA连接配置<ul><li>spring.datasource.url后面加上<code>characterEncoding=utf-8</code>参数</li></ul></li></ol><p><strong>ps：后面才知道mysql的utf8是假的，只支持三字节的编码，utf8mb4才是现在称的真正utf8</strong></p></li></ul><h2 id="view-object">View Object</h2><p>因为前端要的字段可能跟数据库里的不同，或者要其他的数据，都在一个接口处返回，或者嵌套对象返回。<br>解决方法是使用一大片 getter setter for 语句来处理，代码极其不好看。于是花半天时间查阅 <a href="https://docs.spring.io/spring-data/jpa/docs/1.11.13.RELEASE/reference/html/#projections" target="_blank" rel="noopener">jpa</a> 文档，发现可以用到 VO 来解决这些问题。<br>这里直接就贴上代码看一下就ok了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CompreGradeItem</span> </span>&#123;</span><br><span class="line">    <span class="function">Integer <span class="title">getCompreRank</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">// more...与数据库字段相同的直接写 get 方法</span></span><br><span class="line"><span class="comment">// 使用Value注解，获取到对象内的成员</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"#&#123;target.student.major&#125;"</span>)</span><br><span class="line">    <span class="function">String <span class="title">getMajor</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">// 新建的键值对，可以利用 spel 实现简单的处理</span></span><br><span class="line"><span class="comment">// 要实现高级自定义，则编写自己的 bean 可以实现任意逻辑（下面一个）</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"#&#123;@compreGradeBean.getAddGroup(target)&#125;"</span>)</span><br><span class="line">    <span class="function">List&lt;Object&gt; <span class="title">getAddGroup</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CompreGradeBean</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CompreAddGradeRepository compreAddGradeRepository;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AwardBean awardBean;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CompreGradeBean</span><span class="params">(CompreAddGradeRepository compreAddGradeRepository, AwardBean awardBean)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.compreAddGradeRepository = compreAddGradeRepository;</span><br><span class="line">        <span class="keyword">this</span>.awardBean = awardBean;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Object&gt; <span class="title">getAddGroup</span><span class="params">(CompreGradeEntity compreGradeEntity)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 在这里编写自定义的方法，可以再进行查询。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CompreGradeRepository</span> <span class="keyword">extends</span> <span class="title">JpaRepository</span>&lt;<span class="title">CompreGradeEntity</span>, <span class="title">String</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function">Page&lt;CompreGradeItem&gt; <span class="title">findAllByStudentMajorLikeAndStudentStuClassLikeAndYearTerm</span><span class="params">(String major,String stuClass,String yearTerm,Pageable pageable)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>更新：<br>用这种方法，由于 jpa 无法预知程序员想要留下的字段，所以直接全部字段都查询出来，数据量少应该无所谓，但是最好还是写 nativeQuery 这样数据库压力会小点，但是返回的是 <code>List&lt;Object[]&gt;</code> 映射字段名就麻烦了。用 setter ？不存在的。尽量避免写出无意义，而且容易出错的代码<br>下面说一下我正在使用的方法：<br>配合 java 8 的特性 stream 实现字段映射：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 要映射的类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassForm</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> String A;</span><br><span class="line"><span class="keyword">private</span> String B;</span><br><span class="line"><span class="comment">// 这里是一个需要调用 bean 的一个参数</span></span><br><span class="line"><span class="keyword">private</span> String C;</span><br><span class="line"><span class="comment">//   getter   setter</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ClassForm <span class="title">map</span><span class="params">(Object[] i)</span></span>&#123;</span><br><span class="line">ClassForm tmp = <span class="keyword">new</span> ClassForm();</span><br><span class="line">tmp.setA(i[<span class="number">0</span>]);</span><br><span class="line">tmp.setB(i[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 模仿流式 api</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> ClassForm <span class="title">setC</span><span class="params">(String c)</span></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.C = c;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在外层调用的时候</span></span><br><span class="line">List&lt;Object[]&gt; x = repository.findAllByXXX(xxx);</span><br><span class="line">List&lt;ClassForm&gt; r = x.stream().map(s-&gt;ClassForm.map(s).setC(myBean.getC(s[<span class="number">2</span>]))).Collect(Collector.toList());</span><br><span class="line"><span class="comment">// 随后 r 就可以通过反射 API，自动生成 JSON 数据了</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;jpa&quot;&gt;JPA&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;中文乱码&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;检查数据库编码
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;show variables like &#39;character_set_database&#39;;&lt;/code&gt;–查看该数据库使用的编码
      
    
    </summary>
    
    
      <category term="spring boot" scheme="https://whllhw.xyz/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>近乎全栈的体验</title>
    <link href="https://whllhw.xyz/posts/2017/12/15/%E8%BF%91%E4%B9%8E%E5%85%A8%E6%A0%88%E7%9A%84%E4%BD%93%E9%AA%8C/"/>
    <id>https://whllhw.xyz/posts/2017/12/15/近乎全栈的体验/</id>
    <published>2017-12-15T03:57:56.000Z</published>
    <updated>2018-09-10T05:05:59.889Z</updated>
    
    <content type="html"><![CDATA[<h1>#全栈开发感想</h1><h2 id="摘要">##摘要</h2><p>以前一直是学习后端开发，使用简单的 <code>flask</code> 框架进行开发，前端的网页要不就是没有，要不就是抄别人现成的网页，只是把<code>ajax</code>请求地址改成自己的。开发一些玩具类似的东西还是挺快的。</p><h2 id="背景">##背景</h2><p>现在突然有个课设项目，大佬要跟我组队，不过他也不会前端的东西，我知道也是浅尝辄止。见过许多华丽的网页，自己却写不出来。我让他先去看一看网页相关的库，上上w3school 先入入门。过了几天，结果他就直接用上bootstrap写出页面的布局了。还把要使用到的图形库，及其插件给找到了。以前我是没有弄过页面布局，我后面又去看栅格布局，bootstrap是如何进行布局，以及响应式布局的（虽然这个项目用不上）</p><p>自己学习过Python相关的Web开发框架，写起来就不是很吃力，基本查查文档就行了。他拿着我的代码却无从下手。数据库方面我也是直接 sql 语句写的，使用零配置的sqlite3 加快进度。他开始可能也没懂相关的地方，结果到他的电脑就出问题了，找不到我建立的数据库表。他弄了很久，后面查到是Pycharm的路径没有设置，由于sqlite打开不存在的数据文件时不会报错，直接新建了一个新的文件。应该就直接访问用户的目录去了，但是由于是没有建立表，查询就会出错。</p><h3 id="总结">###总结</h3><p>关于团队协作，以前写一点玩具都是自己在写，没有用团队协作的东西（最多也就用Git 来同步我在服务器写的代码了）。项目开始前，是我写前端和后端比较多，队友写算法（他还研究了C++与Python连接的问题，开始用boost ，后面直接就ctypes）</p><h3 id="1-代码同步问题：">1.  代码同步问题：</h3><p>一开始，每个人写的功能不一样，代码几乎不需要同步。到后面对接才发现没有代码同步，TIM传文件真的很烦人，以为项目快结束了，然而后面的bug修复，文件传输就越来越多。不得已在最后使用了Git，前面费的时间要早用git 就不会白白费在传文件上。</p><h3 id="2-整体项目的架构：">2.  整体项目的架构：</h3><p>由于还是缺乏对团队项目的整体规划缺少实战的经验，一开始就没有认真考虑出完整的构思，只有大概的想象，放在后面对接时就费了不少的功夫，要是稍有一点整体的构想，就不会到后面的改了又改，后端数据库和前端对接不上，又要去调试代码。功能到后面想添加就得重写代码</p><h3 id="3-调试工具的使用：">3.  调试工具的使用：</h3><p>学会看输出。调试工具方便了测试，找bug。客户端网络请求，和后台数据匹配就清晰可见。由于使用了很多的前端相关库，一旦有错误就会抛出错误。就可以在相关的代码行数查看，动态修改执行的语句，和页面上的DOM，JQuery还是一如既往的强大，封装的方法很全，写起来很快。JS语言的强大，与灵活，赋予了编码很大的自由度，当然需要极高的操作才可以把握这个度。</p><h3 id="4-软件工程方面的理论支撑：">4.  软件工程方面的理论支撑：</h3><p>写玩具简单，但是真正做出能实际运用的东西就要思考了。编码也是写文章，写思想的，只不过表达形式不一样，文章用文字，用修辞手法，写作手法。而代码则是用计算机能够识别的文字，做一件事有不同的方法，用户看到的输出可能是一样的。但是代码放在哪里，何时执行却是编码时应该想清楚的。以前C++编写过程中，一个功能性类即有cin 又有cout这合适吗，执行功能就不应该和用户进行交互，交互应该交给合适的类去做。功能性的类应该只有接口，由外部调用，可抛出错误，返回值作为输出，或者由交互相关类处理后输出。这样做到系统的低耦合、高内聚。鲁棒性高。</p><h3 id="5-前端技术熟悉：">5.  前端技术熟悉：</h3><p>在项目中学习，能够加深理解。很多的技术都没接触过。这次让我知道页面的交互确实不简单，在命令行，对有技术的使用者会很熟悉。对无基础的则还是需要和谐的界面。和后端的交互使用ajax，http协议的熟悉，请求到后端的api地址，返回内容都是要考虑的，整个网页程序的统一，分工要明确。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;#全栈开发感想&lt;/h1&gt;
&lt;h2 id=&quot;摘要&quot;&gt;##摘要&lt;/h2&gt;
&lt;p&gt;以前一直是学习后端开发，使用简单的 &lt;code&gt;flask&lt;/code&gt; 框架进行开发，前端的网页要不就是没有，要不就是抄别人现成的网页，只是把&lt;code&gt;ajax&lt;/code&gt;请求地址改成自己的
      
    
    </summary>
    
    
      <category term="flask, js" scheme="https://whllhw.xyz/tags/flask-js/"/>
    
  </entry>
  
  <entry>
    <title>Git记录</title>
    <link href="https://whllhw.xyz/posts/2017/11/25/Git%E8%AE%B0%E5%BD%95/"/>
    <id>https://whllhw.xyz/posts/2017/11/25/Git记录/</id>
    <published>2017-11-25T12:02:36.000Z</published>
    <updated>2018-09-10T05:05:59.652Z</updated>
    
    <content type="html"><![CDATA[<h1>#Git 使用笔记</h1><p>克隆本分支，深度为1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone -b deploy_online --depth=1 git@github.com:whllhw/whllhw.github.io </span><br><span class="line">git push #提交代码直接push</span><br></pre></td></tr></table></figure><p>当已经存在.git文件夹时可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git branch -r # 显示远程分支</span><br><span class="line">git branch -a # 显示所有分支</span><br><span class="line">git checkout -b dev origin/deploy_online # 建立本地分支dev并切换为远程的deploy_online？待验证</span><br></pre></td></tr></table></figure><p>推送到远程其他分支时</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:whllhw/whllhw.github.io #添加远程仓库</span><br><span class="line">git push --set-upstream origin master:passage #将本地的master分支提交到远程的passage</span><br><span class="line"># 以后每次提交都要使用 git push origin HEAD:passage 有点麻烦！</span><br><span class="line">    # 或者使用上面切换分支的方法 git checkout -b ... </span><br><span class="line"># 或者使用本地分支与远程分支相同(master 作为变量，为分支名)</span><br><span class="line">git push --set-upstream origin master #默认将本地master分支提交到远程的master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;#Git 使用笔记&lt;/h1&gt;
&lt;p&gt;克隆本分支，深度为1&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
      
    
    </summary>
    
    
      <category term="git, linux" scheme="https://whllhw.xyz/tags/git-linux/"/>
    
  </entry>
  
  <entry>
    <title>我的云上CentOS记录</title>
    <link href="https://whllhw.xyz/posts/2017/11/25/%E6%88%91%E7%9A%84%E4%BA%91%E4%B8%8ACentOS%E8%AE%B0%E5%BD%95/"/>
    <id>https://whllhw.xyz/posts/2017/11/25/我的云上CentOS记录/</id>
    <published>2017-11-25T11:55:27.000Z</published>
    <updated>2018-09-10T05:05:59.847Z</updated>
    
    <content type="html"><![CDATA[<h1>#使用CentOS笔记</h1><blockquote><p>在云上使用Centos，很多常用的命令不能直接用。软件仓库轻量化，也有导致使用不便。安装nginx 要添加源，才能直接安装，不然就是自己编译源代码。<br>将持续更新。。。</p></blockquote><h1>##使用常用命令</h1><p>Centos 安装编译工具包，很多在其他系统上直接安装的程序，都被包含进去，保证软件包仓库的纯净。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall "Development Tools"</span><br></pre></td></tr></table></figure><p>nginx 配置重载<br><code>nginx -s reload</code><br>nginx 配置测试<br><code>nginx -t</code></p><p>查看本地端口使用情况</p><p><code>netstat -ntlp</code></p><p>结束进程</p><p><code>pkill {pidname}</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;#使用CentOS笔记&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在云上使用Centos，很多常用的命令不能直接用。软件仓库轻量化，也有导致使用不便。安装nginx 要添加源，才能直接安装，不然就是自己编译源代码。&lt;br&gt;
将持续更新。。。&lt;/p&gt;
&lt;/blockquot
      
    
    </summary>
    
    
      <category term="centos, linux" scheme="https://whllhw.xyz/tags/centos-linux/"/>
    
  </entry>
  
  <entry>
    <title>Selenium 自动化测试框架</title>
    <link href="https://whllhw.xyz/posts/2017/09/21/Selenium%20%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6/"/>
    <id>https://whllhw.xyz/posts/2017/09/21/Selenium 自动化测试框架/</id>
    <published>2017-09-21T04:29:15.000Z</published>
    <updated>2018-09-10T05:05:59.707Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>比较快速的爬取一些网站，最快就是用这个框架，记录遇到的坑。</p></blockquote><p>查阅的<a href="https://selenium-python-zh.readthedocs.io/en/latest/locating-elements.html" title="中文文档" target="_blank" rel="noopener">中文文档</a>基本用法简单，但是高级的用法就是英文的，或者没有。这里记录一下。</p><a id="more"></a><hr><p><code>webdriver.Chrome('/path/to/chromedriver')</code></p><ul><li>加载驱动时要指定路径，不然提示没有找到驱动</li><li>在弹出的网页进行查找元素时，要使用切换窗口，不然提示NoSuchElementException</li></ul><p><code>driver.switch_to_window(driver.window_handles[-1])</code></p><ul><li>driver.page_source返回的是当前渲染后的网页的源码，可以进行保存</li><li>获取元素的内容 <code>element.text</code>返回str类型，包含当前元素下所有的内容</li><li>最后一个是json模块的锅：输出json到文件时居然还是\u开头的unicode，python3 还有编码问题？后面终于找到还要附加参数，心态爆炸</li></ul><p><code>f.write(json.dumps(data,indent=4,ensure_ascii=False))</code></p><ul><li><p>隐式等待，可以自制一个装饰器，重复调用</p><p>from <a href="http://selenium.webdriver.common.by" target="_blank" rel="noopener">selenium.webdriver.common.by</a> import By<br>from selenium.webdriver.support import expected_conditions as EC<br>from selenium.webdriver.support.ui import WebDriverWait<br>def wait(func):<br>def wrapper(*args,**kw):<br>return WebDriverWait(driver, 30).until(func(*args,**kw))<br>return wrapper<br>@wait<br>def find_element_by_xpath(xpath):<br>return  EC.presence_of_element_located((By.XPATH, xpath))<br>@wait<br>def find_elements_by_xpath(xpath):<br>return EC.presence_of_elements_located((By.XPATH, xpath))</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;比较快速的爬取一些网站，最快就是用这个框架，记录遇到的坑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查阅的&lt;a href=&quot;https://selenium-python-zh.readthedocs.io/en/latest/locating-elements.html&quot; title=&quot;中文文档&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;中文文档&lt;/a&gt;基本用法简单，但是高级的用法就是英文的，或者没有。这里记录一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="selenium, python" scheme="https://whllhw.xyz/tags/selenium-python/"/>
    
  </entry>
  
  <entry>
    <title>使用Flask 中遇到的Python2 编码问题</title>
    <link href="https://whllhw.xyz/posts/2017/09/17/%E4%BD%BF%E7%94%A8Flask%20%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84Python2%20%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98/"/>
    <id>https://whllhw.xyz/posts/2017/09/17/使用Flask 中遇到的Python2 编码问题/</id>
    <published>2017-09-17T08:47:49.000Z</published>
    <updated>2018-09-10T05:05:59.802Z</updated>
    
    <content type="html"><![CDATA[<h1>使用Flask 中遇到的Python2 编码问题</h1><blockquote><p>python2 的编码问题一直被开发者诟病，进行一些字符工作是确实会有点麻烦，而且新手不熟悉编码，更会踩坑里。</p></blockquote><p>开始前建议阅读 <a href="http://selfboot.cn/2016/12/28/py_encode_decode/" target="_blank" rel="noopener">Python2.x 字符编码终极指南</a>，或者搜索一下就有很多文章。</p><p>Python2 中的 str 类型可以看做是 byte 类型的数组，即是字节流。早期设计中并没有这么多的编码，后来版本提供一个 unicode类型来修复了这一类型。有如下关系</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">unicode.encode(<span class="string">'utf-8'</span>) = str</span><br><span class="line">str.decode(<span class="string">'utf-8'</span>) = unicode</span><br></pre></td></tr></table></figure><p>Flask 中提交的表单 + MySQLdb + Mysql</p><ol><li>源文件中指明编码 #coding=utf-8</li><li>Mysql设置编码为utf8</li><li>MySQLdb 连接指定charset=‘utf8’，插入的代码如下</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">g.db.execute(<span class="string">'insert into entries (title, text) values (&#123;&#125;, &#123;&#125;)'</span>.format(request.form[<span class="string">'title'</span>].encode(<span class="string">'utf-8'</span>), request.form[<span class="string">'text'</span>].encode(<span class="string">'utf-8'</span>)))</span><br></pre></td></tr></table></figure><p>request.form[‘title’] 的类型是Unicode，encode后应该就可以变成str了，可是<br>提示<code>OperationalError: (1054, &quot;Unknown column 'abc' in 'field list'&quot;)</code>英文都插入不了，然后经Stack Overflow启发，改动 { } =&gt; “{ }”，然后就可以运行了。。坑死了。</p><p>还有一个坑：<code>OperationalError: (2002, &quot;Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)&quot;)</code></p><p>默认MySQLdb会在/var/lib/mysql 寻找sock，由于服务器的安装位置不是这里，查找mysql.sock发现在/tmp 目录下，创建MySQLdb连接时，指定unix_sock = /tmp/mysql.sock就可以连接了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;使用Flask 中遇到的Python2 编码问题&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;python2 的编码问题一直被开发者诟病，进行一些字符工作是确实会有点麻烦，而且新手不熟悉编码，更会踩坑里。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;开始前建议阅读 &lt;a hr
      
    
    </summary>
    
    
      <category term="flask, python" scheme="https://whllhw.xyz/tags/flask-python/"/>
    
  </entry>
  
  <entry>
    <title>2048</title>
    <link href="https://whllhw.xyz/posts/2017/08/25/2048/"/>
    <id>https://whllhw.xyz/posts/2017/08/25/2048/</id>
    <published>2017-08-25T02:36:40.000Z</published>
    <updated>2018-09-10T05:05:59.589Z</updated>
    
    <content type="html"><![CDATA[<p>完善了原作者<a href="https://github.com/dhcdht/CocosCreatorGames" target="_blank" rel="noopener">dhcdht</a>的2048</p><p>使用cocos-creator制作</p><p>演示地址:<a href="../../2048">2048</a></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;完善了原作者&lt;a href=&quot;https://github.com/dhcdht/CocosCreatorGames&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;dhcdht&lt;/a&gt;的2048&lt;/p&gt;
&lt;p&gt;使用cocos-creator制作&lt;/p&gt;
&lt;p&gt;演示地址:&lt;a href=&quot;../../2048&quot;&gt;2048&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="cocos" scheme="https://whllhw.xyz/tags/cocos/"/>
    
  </entry>
  
  <entry>
    <title>腾讯云主机相关的iptables使用端口转发</title>
    <link href="https://whllhw.xyz/posts/2017/06/23/%E8%85%BE%E8%AE%AF%E4%BA%91%E4%B8%BB%E6%9C%BA%E7%9B%B8%E5%85%B3%E7%9A%84iptables%E4%BD%BF%E7%94%A8%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    <id>https://whllhw.xyz/posts/2017/06/23/腾讯云主机相关的iptables使用端口转发/</id>
    <published>2017-06-23T03:27:00.000Z</published>
    <updated>2018-09-10T05:05:59.869Z</updated>
    
    <content type="html"><![CDATA[<h1>腾讯云主机相关的iptables使用端口转发</h1><blockquote><p>阿里云、腾讯云的主机都是只有内网IP网卡，用户不能使用公网IP网卡，因此直接在iptables上进行开放端口是不行的。</p></blockquote><a id="more"></a><p>在使用ngrok进行内穿透时，笔者发现无法连接到指定端口，于是去iptables放通该端口，使用<figure class="highlight nc"><figcaption><span>-v -w 10 -z intmain.me 6060``` 出现超时错误， ```time out :Operation now in progress``` 但我用其来试探80端口时显示连接成功。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> **腾讯安全组，放通该端口** 。（默认安全组放通全部端口不安全，这个坑一直没发现，郁闷了好久）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">$ iptables -A INPUT -p tcp -m state --state NEW -m tcp --dport 6060 -j ACCEPT</span><br><span class="line">$ service iptables save</span><br><span class="line">$service iptables restart</span><br></pre></td></tr></table></figure></p><p>这样就放通了6060端口，在外部可以进行访问了。<br>端口转发可以实现</p><ul><li>一台机到另一台机端口</li><li>转发本机端口的转发（相当于端口引用）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 首先启用端口转发</span><br><span class="line"><span class="meta">$</span> echo 1 &gt; /proc/sys/net/ipv4/ip_forward</span><br><span class="line"><span class="meta">#</span> 或者修改 /etc/sysctl.conf ,使net.ipv4.ip_forward = 1 ,sysctl -p</span><br></pre></td></tr></table></figure><p>参考链接：<br><a href="http://blog.csdn.net/zzhongcy/article/details/42738285" target="_blank" rel="external">linux下用iptables转发本地端口</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;腾讯云主机相关的iptables使用端口转发&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;阿里云、腾讯云的主机都是只有内网IP网卡，用户不能使用公网IP网卡，因此直接在iptables上进行开放端口是不行的。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="linux, iptables" scheme="https://whllhw.xyz/tags/linux-iptables/"/>
    
  </entry>
  
  <entry>
    <title>Nginx上php部署 403-Forbidden 问题</title>
    <link href="https://whllhw.xyz/posts/2017/06/01/Nginx%E4%B8%8Aphp%E9%83%A8%E7%BD%B2%20403-Forbidden%20%E9%97%AE%E9%A2%98/"/>
    <id>https://whllhw.xyz/posts/2017/06/01/Nginx上php部署 403-Forbidden 问题/</id>
    <published>2017-06-01T05:37:00.000Z</published>
    <updated>2018-09-10T05:05:59.606Z</updated>
    
    <content type="html"><![CDATA[<p>php7.0-fpm + Nginx搭建php服务，遇到403 也是常见的情形。网络上有说进程数不够、缓存不够会出现403 ，可我这破网站也就我一人在上，显然不是这情况。先记录下如何安装。</p><pre><code>sudo apt-get install php nginx # 默认php7自带了fpm</code></pre><p>修改Nginx默认站点的配置</p><a id="more"></a><pre><code>sudo /etc/nginx/sites-enabled/default</code></pre><p>修改location ~ .php$ 下的内容：<br>去掉注释 #</p><pre><code>location ~ \.php$ {include snippets/fastcgi-php.conf;# With php7.0-cgi alone:#fastcgi_pass 127.0.0.1:9000;# With php7.0-fpm:fastcgi_pass unix:/run/php/php7.0-fpm.sock;}</code></pre><p>fpm比cgi模式下快，注意不能同时启用两个，会报错。（智障了半天没有找出来）</p><p>重启一下服务：</p><pre><code>/etc/init.d/nginx reload</code></pre><hr><p>然后会出现访问网站 403 Forbidden 错误！！！<br>网上找了一下说是权限的锅，Nginx 与 php-fpm 运行的用户没有权限读取目录下文件所致。</p><pre><code>sudo chown www-data:www-data . -Rsudo chmod 770 . -R</code></pre><p>www-data 是运行Nginx的默认用户，php7.0-fpm写入系统服务，运行用户是root。不能简单的设置为 777 ，违反权限最小原则，安全性丢失。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php7.0-fpm + Nginx搭建php服务，遇到403 也是常见的情形。网络上有说进程数不够、缓存不够会出现403 ，可我这破网站也就我一人在上，显然不是这情况。先记录下如何安装。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install php nginx # 默认php7自带了fpm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改Nginx默认站点的配置&lt;/p&gt;
    
    </summary>
    
    
      <category term="nginx, php" scheme="https://whllhw.xyz/tags/nginx-php/"/>
    
  </entry>
  
  <entry>
    <title>wxPython的坑，textctrl回车事件处理</title>
    <link href="https://whllhw.xyz/posts/2017/03/30/wxPython%E7%9A%84%E5%9D%91%EF%BC%8Ctextctrl%E5%9B%9E%E8%BD%A6%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/"/>
    <id>https://whllhw.xyz/posts/2017/03/30/wxPython的坑，textctrl回车事件处理/</id>
    <published>2017-03-30T07:14:42.000Z</published>
    <updated>2018-09-10T05:05:59.768Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>学习Python的GUI界面绘制，对比PyQt，wxPython的区别，选择了wxPython的路径。</em> 为一个小程序，实现网络聊天室的效果，简要写写其界面，毕竟只用终端界面容易出现冲突。</p></blockquote><blockquote><p>我参考的是这个<br><a href="http://zetcode.com/wxpython/firststeps/" target="_blank" rel="noopener">快速入门教程</a></p></blockquote><h1>到正题了————&gt;</h1><p>实现功能为：按下回车，发送信息到服务器，并广播到各个客户端。</p><p><strong>BUG</strong>：wxPython消息处理机制会先处理按下ENTER键的事件，而不是先执行回车。</p><a id="more"></a><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://intmain.me/images/sp170330_152238.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">OnEnter</span><span class="params">(self,e)</span>:</span></span><br><span class="line">self.out.WriteText(<span class="string">'\n&lt;localhost&gt;'</span> + \</span><br><span class="line">self.text.GetValue())</span><br><span class="line">self.text.Clear()</span><br></pre></td></tr></table></figure><p>处理后会多出空格。就像这样：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://intmain.me/images/sp170330_152834.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在网上查解决方法，找不到。小型库使用者少（还是我弱鸡）</p><p>突然看到还可以绑定事件 wx.EVT_TEXT 来检测输入的内容。于是再绑定一个清除回车的消息不就可以了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://intmain.me/images/sp170330_152523.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">self.Bind(wx.EVT_TEXT,self.replaceEnter,self.text)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">replaceEnter</span><span class="params">(self,e)</span>:</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">'\\n'</span> <span class="keyword">in</span> self.text.GetValue():</span><br><span class="line">self.text.Clear()</span><br></pre></td></tr></table></figure><p>最后，完美解决~</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;学习Python的GUI界面绘制，对比PyQt，wxPython的区别，选择了wxPython的路径。&lt;/em&gt; 为一个小程序，实现网络聊天室的效果，简要写写其界面，毕竟只用终端界面容易出现冲突。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;我参考的是这个&lt;br&gt;
&lt;a href=&quot;http://zetcode.com/wxpython/firststeps/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;快速入门教程&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;到正题了————&amp;gt;&lt;/h1&gt;
&lt;p&gt;实现功能为：按下回车，发送信息到服务器，并广播到各个客户端。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BUG&lt;/strong&gt;：wxPython消息处理机制会先处理按下ENTER键的事件，而不是先执行回车。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="https://whllhw.xyz/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>SSH无密码登录三步实现</title>
    <link href="https://whllhw.xyz/posts/2017/03/11/SSH%E6%97%A0%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95%E4%B8%89%E6%AD%A5%E5%AE%9E%E7%8E%B0/"/>
    <id>https://whllhw.xyz/posts/2017/03/11/SSH无密码登录三步实现/</id>
    <published>2017-03-11T15:37:45.000Z</published>
    <updated>2018-09-10T05:05:59.738Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><em>SSH免密码登录百度上有很多教程，大多是重复的，效果不一定好，Linux字符终端调试起来不一定好受，原来的Ubuntu上没有试过登录，后面就弄不好了。</em><br>借助必应的威力，有了新的发现，借助__ssh-copy-id__，三步实现！！</p></blockquote><h2 id="第一步：">第一步：</h2><p>生成密钥：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-kengen</span><br></pre></td></tr></table></figure><p>保存在_~/.ssh/_目录下。</p><h2 id="第二步：">第二步：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub username@remote-host</span><br></pre></td></tr></table></figure><p>该命令将公钥文件写到远程机器的 <em>~/.ssh/authorized_key</em></p><h2 id="第三步：">第三步：</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh username@remote-host</span><br></pre></td></tr></table></figure><p>登录！！</p><blockquote><p>原文：</p></blockquote><p><a href="http://blog.chinaunix.netdd/uid-26284395-id-2949145.html" target="_blank" rel="noopener">使用ssh-keygen和ssh-copy-id三步实现SSH无密码登录</a></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;SSH免密码登录百度上有很多教程，大多是重复的，效果不一定好，Linux字符终端调试起来不一定好受，原来的Ubuntu上没有试过登录，后面就弄不好了。&lt;/em&gt;&lt;br&gt;
借助必应的威力，有了新的发现，借助__ssh-copy-id__，三步实现！！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;第一步：&quot;&gt;第一步：&lt;/h2&gt;
&lt;p&gt;生成密钥：&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-kengen&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;保存在_~/.ssh/_目录下。&lt;/p&gt;
&lt;h2 id=&quot;第二步：&quot;&gt;第二步：&lt;/h2&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-copy-id -i ~/.ssh/id_rsa.pub username@remote-host&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该命令将公钥文件写到远程机器的 &lt;em&gt;~/.ssh/authorized_key&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;第三步：&quot;&gt;第三步：&lt;/h2&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh username@remote-host&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;登录！！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原文：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.chinaunix.netdd/uid-26284395-id-2949145.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;使用ssh-keygen和ssh-copy-id三步实现SSH无密码登录&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="ubuntu, ssh" scheme="https://whllhw.xyz/tags/ubuntu-ssh/"/>
    
  </entry>
  
  <entry>
    <title>VMware vSphere Hypervisor (ESXi)虚拟化使用笔记</title>
    <link href="https://whllhw.xyz/posts/2017/02/17/VMware%20vSphere%20Hypervisor%20(ESXi)%E8%99%9A%E6%8B%9F%E5%8C%96%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>https://whllhw.xyz/posts/2017/02/17/VMware vSphere Hypervisor (ESXi)虚拟化使用笔记/</id>
    <published>2017-02-17T07:32:47.000Z</published>
    <updated>2018-09-10T05:05:59.628Z</updated>
    
    <content type="html"><![CDATA[<h1>VMware vSphere Hypervisor (ESXi)虚拟化使用</h1><a id="more"></a><hr><h2 id="一-获取vmware-vsphere-hypervisor-esxi">一、获取VMware vSphere Hypervisor (ESXi)</h2><p><a href="https://my.vmware.com/cn/web/vmware/downloads" target="_blank" rel="noopener">官网下载地址</a>下载ESXi以及管理工具<em>VMware vSphere</em></p><hr><h2 id="二-安装esxi">二、安装ESXi</h2><p>注意：会清除数据并重新分区，注意资料备份</p><hr><h2 id="三-配置网络">三、配置网络</h2><p>设置静态IP、DNS</p><hr><h2 id="四-登录管理esxi">四、登录管理ESXi</h2><p>可选<strong>VMware Host Client</strong>登录，或者<strong>vSphere Client for Windows</strong></p><ol><li><a href="https://xn--IP-wz2cm89g" target="_blank" rel="noopener">https://主机IP</a>，即可进入VMware Host Client</li><li>添加虚拟机，或者 部署OVF快速生成虚拟机</li><li>添加系统光碟（Linux，Windows）</li><li>启动安装程序</li></ol><hr><h2 id="五-添加用户并登录虚拟机">五、添加用户并登录虚拟机</h2><p>登录客户机需要在VMware Player，VMware workstation 里连接服务器，使用账户登录，添加权限不同的用户方便管理。</p><p><strong>对密码长度有严格的要求</strong></p><hr><h2 id="六-获得官方的授权密钥">六、获得官方的授权密钥</h2><hr><h1>存在问题</h1><h2 id="ntf41client-load-faided">ntf41client load faided</h2><p>安装过程中提示No network adapters，无法继续安装。网卡驱动缺失造成的。</p><blockquote><p><a href="http://blog.bossma.cn/server/pc-install-esxi-5-5-two-problem-solution/" target="_blank" rel="noopener"> “解决方案”</a></p></blockquote><ol><li>下载网卡驱动</li><li>驱动打包工具ESXi-Customizer制作新的iso文件</li></ol><h2 id="调用对象-ha-datastoresystem-的-hostdatastoresystem-queryvmfsdatastorecreateoptions-添加datastore出错">调用对象 “ha-datastoresystem”的“HostDatastoreSystem.QueryVmfsDatastoreCreateOptions”。添加datastore出错</h2><p>安装完成后没有数据储存，无法建立虚拟机，添加datastore提示**“HostDatastoreSystem.QueryVmfsDatastoreCreateOptions” for object “ha-datastoresystem” on ESXi “xxx.xxx.xxx.xx″ failed**</p><blockquote><p><a href="http://blog.sina.com.cn/s/blog_666e9239010149ju.html" target="_blank" rel="noopener">参考博客</a><br><a href="http://www.ithao123.cn/content-10321943.html" target="_blank" rel="noopener">参考2</a><br><a href="https://kb.vmware.com/selfservice/microsites/search.do?cmd=displayKC&amp;externalId=1008886" target="_blank" rel="noopener">官方解答</a></p></blockquote><p>原因分析：</p><ol><li>LUN空间大小超过2TB。</li><li>这个LUN之前作为RDM裸设备映射。</li><li>LUN包含一个GPT分区，不能被清除。</li></ol><p>未在实体机上解决。</p><hr><blockquote><p>参考链接：<a href="http://dngood.blog.51cto.com/446195/1123097" target="_blank" rel="noopener">家用PC机打造VSphere5.1 测试环境</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;VMware vSphere Hypervisor (ESXi)虚拟化使用&lt;/h1&gt;
    
    </summary>
    
    
      <category term="vmware" scheme="https://whllhw.xyz/tags/vmware/"/>
    
  </entry>
  
  <entry>
    <title>SSH密钥认证的坑</title>
    <link href="https://whllhw.xyz/posts/2017/01/10/SSH%E5%AF%86%E9%92%A5%E8%AE%A4%E8%AF%81%E7%9A%84%E5%9D%91/"/>
    <id>https://whllhw.xyz/posts/2017/01/10/SSH密钥认证的坑/</id>
    <published>2017-01-10T14:43:38.000Z</published>
    <updated>2018-09-10T05:05:59.721Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在jobsky的服务器(<strong>Centos7</strong>)上不想输密码，SSH配置的时候老出现问题：<br><strong>Server refused our key</strong></p></blockquote><a id="more"></a><h1>解决过程</h1><ol><li>ssh 文件夹权限不对？<br>据网上说要求__700__甚至__400__的权限，改了，<strong>无济于事</strong></li><li>用puttykeygen生成的问题？<br>万恶的Mircosoft和Linux不相容，我又在服务端生成了一个新的密钥，<strong>失败</strong></li><li>终于想起我的腾讯爸爸，登上云服务器看看.ssh文件夹，只有一个文件__authorized_keys__。好像没什么毛病！</li><li>Selinux?失效！</li><li>最后在一篇文章中找到<a href="http://blog.csdn.net/magic_zj00/article/details/7470023" target="_blank" rel="noopener">&quot;关于使用putty私钥连接linux出现失败的原因解决方案&quot;</a><br>竟然有和3相同的名字：<strong>authorized_keys</strong></li><li>最后key-comment 内容不重要</li></ol><h1>Finally</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv id_rsa.pub authorzied_keys</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://www.intmain.me/images/20170110223815.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="吐槽">吐槽</h2><p>辣鸡百度，尽搜出来水教程，弄了一个晚上<br>附：SSH的配置文件/etc/ssh/ssh_config</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在jobsky的服务器(&lt;strong&gt;Centos7&lt;/strong&gt;)上不想输密码，SSH配置的时候老出现问题：&lt;br&gt;
&lt;strong&gt;Server refused our key&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="ubuntu" scheme="https://whllhw.xyz/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="https://whllhw.xyz/posts/2016/12/11/Markdown%E8%AF%AD%E6%B3%95/"/>
    <id>https://whllhw.xyz/posts/2016/12/11/Markdown语法/</id>
    <published>2016-12-11T03:09:25.000Z</published>
    <updated>2018-09-10T05:05:59.686Z</updated>
    
    <content type="html"><![CDATA[<h1>Markdown 简介</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://wenchao-img.qiniudn.com/a53403c34c199fdd759571c2997ed910.png" alt="文章思维导图" title="">                </div>                <div class="image-caption">文章思维导图</div>            </figure><a id="more"></a><hr><h2 id="思维导图">思维导图</h2><hr><h2 id="markdown是什么">Markdown是什么</h2><blockquote><p>Markdown 是一种轻量级标记语言，创始人为约翰·格鲁伯（John Gruber）。它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML(或者HTML)文档”。[1]这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。<br>——维基百科</p></blockquote><hr><h2 id="优点：">优点：</h2><ul><li>简单，容易上手</li><li>纯文本实现，程序员最爱，容易扩展，方便和其他工具联动</li><li>平台支持广：以Github为首的各种平台、各种博客都支持，基本上现在面向程序员的输入框都可以用Markdown来写了</li><li>丰富的工具链<ul><li>编辑器：各种支持所见即所得的编辑器</li><li>和各种其他格式互相转化的工具。PDF、Mobi、Epub、HTML等等，几乎你能想到的所有格式它都能转</li></ul></li></ul><hr><h2 id="markdown语法">Markdown语法</h2><!--more--><ul><li><a href="http://ibruce.info/2013/11/26/markdown/" target="_blank" rel="noopener">最好入门的简明语法</a></li><li><a href="http://wowubuntu.com/markdown/basic.html" target="_blank" rel="noopener">简明版 Markdown 语法说明(简体中文版)</a></li><li><a href="http://wowubuntu.com/markdown/index.html" target="_blank" rel="noopener">完整版 Markdown 语法说明(简体中文版)</a></li><li><a href="https://help.github.com/articles/github-flavored-markdown/" target="_blank" rel="noopener">GitHub Flavored Markdown</a></li></ul><hr><h2 id="markdown-编辑器-1">Markdown 编辑器(1)</h2><ul><li>Windows 平台<ul><li><a href="http://markdownpad.com/" target="_blank" rel="noopener">MarkdownPad</a></li><li><a href="http://code52.org/DownmarkerWPF/" target="_blank" rel="noopener">MarkPad</a></li></ul></li><li>Linux 平台<ul><li><a href="http://sourceforge.net/p/retext/home/ReText/" target="_blank" rel="noopener">ReText</a></li></ul></li><li>Mac 平台<ul><li><strong><em><a href="http://mouapp.com/" target="_blank" rel="noopener">Mou</a></em></strong>，应该是Mac下目前最好的markdown编辑器，推荐使用。</li></ul></li><li>在线编辑器<ul><li><a href="http://markable.in/" target="_blank" rel="noopener">Markable.in</a></li><li><a href="http://dillinger.io/" target="_blank" rel="noopener">Dillinger.io</a></li></ul></li></ul><hr><h2 id="markdown-编辑器-2">Markdown 编辑器(2)</h2><ul><li>浏览器插件<ul><li><a href="https://chrome.google.com/webstore/detail/oknndfeeopgpibecfjljjfanledpbkog" target="_blank" rel="noopener">MaDe</a> (Chrome)</li><li><strong><em><a href="http://maxiang.info/" target="_blank" rel="noopener">马克飞象</a></em></strong>，用来写印象笔记的客户端，支持TOC、LaTex 公式、流程图、时序图等扩展语法，支持直接从剪贴板粘贴图片。缺点是只支持用来写印象笔记，并且只能试用10天，收费79每年。如果平时有用印象笔记记录的习惯，推荐使用。</li></ul></li><li>高级应用<ul><li><a href="http://www.sublimetext.com/2" target="_blank" rel="noopener">Sublime Text 2</a> + <a href="http://ttscoff.github.io/MarkdownEditing/" target="_blank" rel="noopener">MarkdownEditing</a> / <a href="http://lucifr.com/2012/07/12/markdownediting-for-sublime-text-2/" target="_blank" rel="noopener">教程</a></li></ul></li></ul><hr><h2 id="mou">Mou</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://wenchao-img.qiniudn.com/b44ec598c54b736b5ea621112f993a21.png" alt="Mou截图" title="">                </div>                <div class="image-caption">Mou截图</div>            </figure><hr><h2 id="马克飞象">马克飞象</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://wenchao-img.qiniudn.com/513b1b89566dd2a15935bee064221974.png" alt="马克飞象截图" title="">                </div>                <div class="image-caption">马克飞象截图</div>            </figure><hr><h2 id="格式转化-1">格式转化(1)</h2><ul><li><a href="http://johnmacfarlane.net/pandoc/" target="_blank" rel="noopener">Pondoc</a>，号称格式转化的瑞士军刀，可以转化成几乎任何格式</li><li>制作自己的博客<ul><li><a href="http://jekyllcn.com/" target="_blank" rel="noopener">jekyll</a>，Github原生支持的一个静态博客，ruby写的，可以直接用Github pages托管，相当于拥有了一个挂在github上的免费个人博客；</li><li><a href="http://octopress.org/" target="_blank" rel="noopener">Octopress</a>，基于jekyll，做了一些改进；</li><li><a href="http://hexo.io/index.html" target="_blank" rel="noopener">Hexo</a>，一个台湾人写的markdown静态博客框架，使用NodeJS实现，速度快，轻量级，主题也比较小清新。</li></ul></li><li>制作文档<ul><li><a href="https://readthedocs.org/" target="_blank" rel="noopener">readthedocs</a>，使用最广的文档服务，如<a href="https://scrapy-chs.readthedocs.org/zh_CN/0.24/index.html" target="_blank" rel="noopener">Scrapy 文档</a>，支持Restructed和Markdown语言，其Markdown支持通过mkdocs来实现；</li><li><a href="http://www.mkdocs.org/" target="_blank" rel="noopener">mkdocs</a></li></ul></li></ul><hr><h2 id="mkdocs-文档效果">mkdocs 文档效果</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://wenchao-img.qiniudn.com/d2f8561a4053477b739c07572d634361.png" alt="Scrapy 文档" title="">                </div>                <div class="image-caption">Scrapy 文档</div>            </figure><hr><h2 id="格式转化-2">格式转化(2)</h2><ul><li>制作电子书<ul><li><a href="https://www.gitbook.com" target="_blank" rel="noopener">gitbook</a>，利用Markdown写电子书的工具，并提供免费托管。开源电子书<a href="http://yeasy.gitbooks.io/docker_practice/" target="_blank" rel="noopener">Docker —— 从入门到实践</a>即是托管在上面的。我的笔记网站也是通过该工具生成的。</li></ul></li><li>制作slides<ul><li><a href="https://github.com/hakimel/reveal.js" target="_blank" rel="noopener">reveal.js</a>, <a href="http://lab.hakim.se/reveal-js/#/" target="_blank" rel="noopener">Demo</a></li><li><a href="https://github.com/adamzap/landslide" target="_blank" rel="noopener">landslide</a>, <a href="http://adamzap.com/misc/presentation.html#slide1" target="_blank" rel="noopener">Demo</a></li></ul></li></ul><hr><h2 id="docker-从入门到实践电子书">Docker —— 从入门到实践电子书</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://wenchao-img.qiniudn.com/6d8b05152f4095b25b2dfc6d99d85692.png" alt="Docker —— 从入门到实践电子书" title="">                </div>                <div class="image-caption">Docker —— 从入门到实践电子书</div>            </figure><hr><h2 id="参考链接">参考链接</h2><ul><li><a href="http://www.jianshu.com/p/2dd051b0b87c" target="_blank" rel="noopener">自动保存图片和插入地址的Alfred Workflow</a></li><li><a href="http://developer.qiniu.com/docs/v6/tools/qrsbox.html" target="_blank" rel="noopener">七牛云存储自动同步</a></li><li><a href="http://zh.wikihow.com/%E5%9C%A8Mac-OS-X%E4%B8%8A%E6%88%AA%E5%8F%96%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE" target="_blank" rel="noopener">Mac 截图解决方案</a></li><li><a href="http://help.gitbook.io/book/markdown.html" target="_blank" rel="noopener">MarkDown 语法</a></li><li><a href="https://github.com/hakimel/reveal.js" target="_blank" rel="noopener">Markdown转ppt工具reveal.js</a>, <a href="http://lab.hakim.se/reveal-js/#/" target="_blank" rel="noopener">Demo</a></li><li><a href="http://www.soimort.org/posts/165/" target="_blank" rel="noopener">Markdown+Pandoc→HTML幻灯片速成</a></li><li><a href="http://aleung.github.io/presentation/markdown/slides.html" target="_blank" rel="noopener">Markdown介绍slide</a></li><li><a href="https://github.com/adamzap/landslide" target="_blank" rel="noopener">landslide</a></li><li><a href="http://dockerpool.com/static/books/gitbook_cn/index.html" target="_blank" rel="noopener">gitbook 使用入门</a></li></ul><hr><h1>THANK YOU!</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1&gt;Markdown 简介&lt;/h1&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                    &lt;img src=&quot;http://wenchao-img.qiniudn.com/a53403c34c199fdd759571c2997ed910.png&quot; alt=&quot;文章思维导图&quot; title=&quot;&quot;&gt;
                &lt;/div&gt;
                &lt;div class=&quot;image-caption&quot;&gt;文章思维导图&lt;/div&gt;
            &lt;/figure&gt;
    
    </summary>
    
    
      <category term="markdown" scheme="https://whllhw.xyz/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>LNMP,SAMBA</title>
    <link href="https://whllhw.xyz/posts/2016/11/16/&#39;LNMP,SAMBA&#39;/"/>
    <id>https://whllhw.xyz/posts/2016/11/16/&#39;LNMP,SAMBA&#39;/</id>
    <published>2016-11-16T02:37:59.000Z</published>
    <updated>2018-09-10T05:05:59.670Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1>配置LNMP</h1><hr><h1>安装Nginx</h1><ul><li>1.执行源更新：<code>sudo apt-get update</code></li><li>2.获取Nginx：<code>sudo apt-get install nginx</code></li><li>3.浏览器打开：<code>202.197.75.58</code></li><li>出现如图即为安装成功！</li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/v4Vb7b4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><h1>配置Nginx</h1><ul><li>1.执行<code>sudo nano /etc/nginx/sites-available/default</code></li><li>2.获取对php的支持更改如下：</li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/lGrrDVu.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/PvPYrbF.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><!--more--><p>#安装MySQL</p><ul><li>1.获取Mysql：<code>sudo apt-get install mysql-server</code></li><li>2.安全配置：<code>sudo mysql_secure_installation</code></li></ul><hr><h1>安装php</h1><ul><li>1.获取php-fastproessmanage：<code>sudo apt-get insatll php7.0-fpm</code></li><li>2.获取php对mysql的支持：<code>sudo apt-get install php7.0-sql</code></li><li>3.获得php其他软件：<code>sudo apt-get install php-curl php-gd php-mbstring php-mcrypt php-xml php-xmlrpc</code></li></ul><hr><ul><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/5kpBLSQ.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><h1>配置php安全</h1><ul><li>1.执行<code>sudo nano /etc/php/7.0/fpm/php.ini</code></li><li>2.修改<code>cgi.fix_pathinfo=0</code>避免安全漏洞</li></ul><hr><h1>MySQL配置</h1><ul><li>1.执行进入后台：<code>mysql -u root -p</code></li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/qzyAhqg.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li>2.创建数据库：<code>CREATE DATABASE wordpress;</code></li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/0yyOe41.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li>3.进入wordpress后台安装</li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/EO5DzIy.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li><li>4.安装完成后即可登录网站后台写博客</li></ul><hr><h1>samba文件共享</h1><ul><li>1.安装samba：<code>sudo apt-get install samba</code></li><li>2.配置samba：<code>sudo nano /etc/samba/smb.conf</code></li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/xHwolcN.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/BCnueuW.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li>3.重启服务：<code>service smbd restart</code></li><li><code>service nmbd restart</code></li><li>4.添加用户，并键入密码：<code>smbpasswd -a lhw</code></li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/6glZMQa.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li>5.在win下可以访问：</li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/gYAZwQQ.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/Lqhuu7F.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li>6.新建一个netgroup用户组<code>groupadd netgroup</code></li><li>7.添加用户<code>useradd a(b,c) -g netgroup</code></li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/rCMN1uN.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li><li>8.分别创建密码：<code>passwd a</code></li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/l830zTJ.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li>9.将smb文件夹归属改变：<code>sudo chown c:netgroup smb</code></li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/rdn2miL.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li><li>10.分别设置smbpasswd：<code>smbpasswd -a a</code></li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/eGIDa0h.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li>11.配置smb，添加字段：</li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/tKfYGgO.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li>12.使用a登录，发现无法上传文件，删除文件。</li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/fa1PWeD.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li>13.使用c登录则可以上传文件：</li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/Mn4KEPd.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/J4rh8oF.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><h1>shell script</h1><ul><li>1.打印登录用户，工作目录：</li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/ZSoIzKz.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li>2.计算从1 2 3 … 100，结果显示在屏幕上且重定向到result.log</li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/Ew9ae0F.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr><ul><li>3.程序的文件名,共有几个参数,若参数的个数小于3个，则输出“the parameter is less than 3“”并退出,显示第二个参数。</li><li><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://i.imgur.com/ChObg5t.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1&gt;配置LNMP&lt;/h1&gt;
&lt;hr&gt;
&lt;h1&gt;安装Nginx&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;1.执行源更新：&lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;2.获取Nginx：&lt;code&gt;sudo apt-
      
    
    </summary>
    
    
      <category term="ubuntu, lnmp, samba" scheme="https://whllhw.xyz/tags/ubuntu-lnmp-samba/"/>
    
  </entry>
  
</feed>
